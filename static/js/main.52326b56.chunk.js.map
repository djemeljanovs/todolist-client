{"version":3,"sources":["components/providers/ApiProvider.tsx","components/elements/icons/DeleteIcon.tsx","components/elements/Button.tsx","components/elements/TodoListInput.tsx","utils/debounce.ts","components/elements/TodoListItem.tsx","components/elements/TodoList.tsx","components/elements/ConnectionStatus.tsx","components/views/TodoListView.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ApiStatus","defaultValue","userId","status","INITIALIZING","createItem","focusItem","blurItem","updateItem","removeItem","items","ApiContext","React","createContext","useApi","context","useContext","Error","EventNames","socket","io","ApiProvider","children","useState","setStatus","setItems","useEffect","on","CONNECTED","e","ERROR","DISCONNECTED","LIST","data","CREATE","concat","UPDATE","console","log","JSON","stringify","updated","index","findIndex","item","_id","push","REMOVE","filter","sendId","useCallback","event","id","emit","text","Provider","value","FOCUS","BLUR","DeleteIcon","props","xmlns","viewBox","fill","color","d","useStyles","createUseStyles","button","display","alignItems","padding","background","disabled","border","fontSize","fontWeight","width","borderRadius","textTransform","userSelect","cursor","Button","classes","className","root","position","marginRight","minWidth","badge","top","left","zIndex","borderTopLeftRadius","borderTopRightRadius","isControlledByCurrentUser","input","height","boxSizing","paddingLeft","TodoListInput","isControlled","setValue","maxLength","type","placeholder","onChange","target","debounce","callback","waitFor","timeout","args","result","clearTimeout","setTimeout","TodoListItem","isControlledByOtherUser","controlledBy","onFocus","onBlur","onClick","tabIndex","marginBottom","TodoList","map","i","flexDirection","icon","getStatusColor","ConnectionStatus","toString","toUpperCase","wrapper","maxWidth","margin","TodoListView","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52326b56.chunk.js","sourcesContent":["import React, {ReactElement, useCallback, useEffect, useState} from 'react'\nimport io from \"socket.io-client\";\n\nexport enum ApiStatus {\n    INITIALIZING= \"Initializing\",\n    CONNECTED= \"Connected\",\n    DISCONNECTED= \"Disconnected\",\n    ERROR = \"Connection Error\",\n}\n\ninterface ApiContextProps {\n    userId: string;\n    status: ApiStatus;\n    createItem: () => void,\n    focusItem: (id: any) => void,\n    blurItem: (id: any) => void,\n    updateItem: (id: any, text: string) => void,\n    removeItem: (id: any) => void,\n    items: TodoItem[];\n}\n\nconst defaultValue: ApiContextProps = {\n    userId: \"\",\n    status: ApiStatus.INITIALIZING,\n    createItem: () => ({}),\n    focusItem: () => ({}),\n    blurItem: () => ({}),\n    updateItem: () => ({}),\n    removeItem: () => ({}),\n    items: [],\n};\n\nconst ApiContext = React.createContext<ApiContextProps>(defaultValue);\n\nexport function useApi(): ApiContextProps {\n    const context = React.useContext<ApiContextProps>(ApiContext);\n    if(!context) {\n        throw new Error(\"useApi must be used within ApiProvider\")\n    }\n    return context;\n}\nconst socket = io('https://ubiquity-todolist-server.herokuapp.com/');\n\nexport type TodoItem = {\n    _id: string;\n    text: string;\n    controlledBy: string;\n}\n\nenum EventNames {\n    LIST = \"item/list\",\n    CREATE = \"item/create\",\n    FOCUS = \"item/focus\",\n    BLUR = \"item/blur\",\n    UPDATE = \"item/update\",\n    REMOVE = \"item/remove\",\n}\n\nexport default function ApiProvider({ children }: {children: ReactElement}) {\n    const [status, setStatus] = useState<ApiStatus>(ApiStatus.INITIALIZING);\n    const [items, setItems] = useState<TodoItem[]>([]);\n\n    useEffect(() => {\n        socket.on(\"connect\", () => {\n            setStatus(ApiStatus.CONNECTED);\n        });\n        socket.on(\"connect_error\", (e: Error) => {\n            setStatus(ApiStatus.ERROR);\n        });\n        socket.on(\"disconnect\", () => {\n            setStatus(ApiStatus.DISCONNECTED);\n        });\n        socket.on(EventNames.LIST, (data: TodoItem[]) => {\n            setItems(data);\n        });\n        socket.on(EventNames.CREATE, (data: TodoItem) => {\n            setItems(items => items.concat(data));\n        })\n        socket.on(EventNames.UPDATE, (data: TodoItem) => {\n            console.log(\"update received: \" + JSON.stringify(data));\n            setItems(items => {\n                const updated = [...items];\n                const index = items.findIndex(item => item._id === data._id);\n                if(index > -1) {\n                    updated[index] = data;\n                } else {\n                    updated.push(data);\n                }\n                return updated;\n            });\n        });\n        socket.on(EventNames.REMOVE, (data: TodoItem) => {\n            setItems(items => items.filter(item => item._id !== data._id));\n        })\n    }, []);\n\n    const sendId = useCallback((event: EventNames, id: string) => {\n        socket.emit(event, {id});\n    }, []);\n\n    const createItem = useCallback(() => {\n        socket.emit(EventNames.CREATE);\n    }, []);\n\n    const updateItem = useCallback((id: any, text: string) => {\n        socket.emit(EventNames.UPDATE, {id, text});\n    }, []);\n\n    return (\n        <ApiContext.Provider value={{\n            userId: socket.id,\n            status,\n            createItem,\n            updateItem,\n            focusItem: (id: string) => sendId(EventNames.FOCUS, id),\n            blurItem: (id: string) => sendId(EventNames.BLUR, id),\n            removeItem: (id: string) => sendId(EventNames.REMOVE, id),\n            items,\n        }}>\n            {children}\n        </ApiContext.Provider>\n    );\n}","import React from 'react';\n\nexport default function DeleteIcon(props: React.SVGProps<SVGSVGElement>) {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 28 28\" {...props}>\n            <path fill={props.color} d=\"M28 22.398L19.594 14 28 5.602 22.398 0 14 8.402 5.598 0 0 5.602 8.398 14 0 22.398 5.598 28 14 19.598 22.398 28z\"/>\n        </svg>\n    )\n}","import React from 'react';\nimport {createUseStyles} from \"react-jss\";\n\ntype ButtonProps = React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\nconst useStyles = createUseStyles<string, ButtonProps>({\n    button: {\n        display: 'flex',\n        alignItems: 'center',\n        color: 'white',\n        padding: 20,\n        background: props => props.disabled ? 'grey' : '#5071FD',\n        border: 'none',\n        fontSize: 24,\n        fontWeight: 'bold',\n        width: 'fit-content',\n        borderRadius: 10,\n        textTransform: 'uppercase',\n        userSelect: \"none\",\n        cursor: 'pointer',\n    }\n});\n\n\nexport default function Button(props: ButtonProps) {\n    const classes = useStyles(props);\n    return <button className={classes.button} {...props}>{props.children}</button>;\n}","import React, {useEffect, useState} from \"react\";\nimport {createUseStyles} from \"react-jss\";\n\ninterface TodoListInputProps {\n    isControlled: boolean;\n    isControlledByCurrentUser: boolean;\n}\n\nconst useStyles = createUseStyles<string, TodoListInputProps>({\n    root: {\n        width: '100%',\n        position: 'relative',\n        marginRight: 10,\n        minWidth: 0,\n    },\n    badge: {\n        position: 'absolute',\n        top: -25,\n        left: 10,\n        color: 'white',\n        zIndex: 100,\n        borderTopLeftRadius: 5,\n        borderTopRightRadius: 5,\n        padding: 5,\n        background: props => props.isControlledByCurrentUser ? '#5071FD' : 'grey',\n    },\n    input: {\n        height: 70,\n        width: '100%',\n        boxSizing: \"border-box\",\n        border: '3px solid lightgrey',\n        borderRadius: 10,\n        fontSize: 26,\n        background: 'none',\n        paddingLeft: 10,\n        '&:focus': {\n            border: '3px solid #5071FD',\n        },\n        '&:disabled': {\n            background: '#EEEEEE',\n            border: '3px solid grey',\n        }\n    },\n});\n\nexport default function TodoListInput({\n                                          isControlled,\n                                          isControlledByCurrentUser,\n                                          ...props\n}: TodoListInputProps & React.InputHTMLAttributes<HTMLInputElement>) {\n    const classes = useStyles({isControlled, isControlledByCurrentUser});\n    const [value, setValue] = useState(props.value);\n\n    useEffect(() => {\n        setValue(props.value);\n    }, [props.value])\n\n    return (\n        <div className={classes.root}>\n            {isControlled && <div className={classes.badge}>\n                {isControlledByCurrentUser ? 'You are editing' : 'Someone else is typing'}\n            </div>}\n            <input\n                maxLength={30}\n                type=\"text\"\n                className={classes.input}\n                placeholder={\"Empty item\"}\n                {...props}\n                value={value}\n                onChange={event => {\n                    if(props.onChange) {\n                        props.onChange(event);\n                    }\n                    setValue(event.target.value);\n                }}\n            />\n        </div>\n    )\n}","export const debounce = <T extends (...args: any[]) => any>(\n    callback: T,\n    waitFor: number\n) => {\n    let timeout: ReturnType<typeof setTimeout>;\n    return (...args: any[]): ReturnType<T> => {\n        let result: any;\n        timeout && clearTimeout(timeout);\n        timeout = setTimeout(() => {\n            result = callback(...args);\n        }, waitFor);\n        return result;\n    };\n};","import React, {ChangeEvent} from 'react';\nimport {createUseStyles} from \"react-jss\";\nimport {TodoItem, useApi} from \"../providers/ApiProvider\";\nimport DeleteIcon from \"./icons/DeleteIcon\";\nimport Button from \"./Button\";\nimport TodoListInput from \"./TodoListInput\";\nimport {debounce} from \"../../utils/debounce\";\n\ntype TodoListItemProps = TodoItem;\n\nconst useStyles = createUseStyles<string, TodoListItemProps>({\n    root: {\n        display: 'flex',\n        width: '100%',\n    },\n});\n\nexport default function TodoListItem(props: TodoListItemProps) {\n    const {userId, removeItem, focusItem, blurItem, updateItem} = useApi();\n    const isControlledByOtherUser = props.controlledBy != null && props.controlledBy !== userId;\n    const isControlledByCurrentUser = props.controlledBy != null && props.controlledBy === userId;\n    const classes = useStyles(props);\n\n    function onRemove() {\n        removeItem(props._id);\n    }\n\n    function onFocus() {\n        focusItem(props._id);\n    }\n\n    function onBlur() {\n        blurItem(props._id);\n    }\n\n    function onChange(event: ChangeEvent<HTMLInputElement>) {\n        updateItem(props._id, event.target.value);\n    }\n\n    return (\n        <div className={classes.root}>\n            <TodoListInput\n                disabled={isControlledByOtherUser}\n                value={props.text}\n                onChange={debounce(onChange, 1000)}\n                onFocus={onFocus}\n                onBlur={onBlur}\n                isControlled={props.controlledBy != null}\n                isControlledByCurrentUser={isControlledByCurrentUser}\n            />\n            <Button onClick={onRemove} disabled={isControlledByOtherUser} tabIndex={-1}>\n                <DeleteIcon width={30} height={30} color={'white'}/>\n            </Button>\n        </div>\n    )\n}","import React from 'react';\nimport {createUseStyles} from \"react-jss\";\nimport TodoListItem from \"./TodoListItem\";\nimport {useApi} from \"../providers/ApiProvider\";\n\nconst useStyles = createUseStyles({\n    item: {\n        marginBottom: 15,\n    },\n});\n\nexport default function TodoList() {\n    const classes = useStyles();\n    const {items} = useApi();\n    return (\n        <>\n            {items.map((item, i) => (\n                <div className={classes.item} key={`item-${i}`}>\n                    <TodoListItem {...item} />\n                </div>\n            ))}\n        </>\n    );\n}","import React from 'react';\nimport { createUseStyles } from 'react-jss';\nimport {ApiStatus, useApi} from \"../providers/ApiProvider\";\n\nconst useStyles = createUseStyles<string, { color: string }>({\n    status: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"center\",\n    },\n    icon: {\n        height: 20,\n        width: 20,\n        borderRadius: \"50%\",\n        background: props => props.color,\n        marginRight: 5,\n    },\n});\n\nfunction getStatusColor(status: ApiStatus) {\n    switch (status) {\n        case ApiStatus.INITIALIZING:\n            return \"yellow\";\n        case ApiStatus.CONNECTED:\n            return \"green\";\n        case ApiStatus.DISCONNECTED:\n            return \"black\";\n        case ApiStatus.ERROR:\n            return \"red\";\n    }\n}\nexport default function ConnectionStatus() {\n    const {status} = useApi();\n    const classes = useStyles({color: getStatusColor(status)});\n    return (\n        <div className={classes.status}>\n            <div className={classes.icon} />\n            <h4>{status.toString().toUpperCase()}</h4>\n        </div>\n    )\n}","import React from 'react';\nimport TodoList from \"../elements/TodoList\";\nimport { createUseStyles } from 'react-jss';\nimport ConnectionStatus from \"../elements/ConnectionStatus\";\nimport Button from \"../elements/Button\";\nimport {ApiStatus, useApi} from \"../providers/ApiProvider\";\n\nconst useStyles = createUseStyles({\n    wrapper: {\n        width: '100%',\n        maxWidth: 600,\n        margin: '0 auto',\n        padding: 15,\n    },\n});\n\nexport default function TodoListView() {\n    const classes = useStyles();\n    const {status, createItem} = useApi();\n    return (\n        <div className={classes.wrapper}>\n            <h2>Multiplayer todo list 🗒️</h2>\n            <ConnectionStatus />\n            <TodoList />\n            <Button disabled={status !== ApiStatus.CONNECTED} onClick={createItem}>New item</Button>\n        </div>\n    );\n}","import React from 'react';\nimport TodoListView from \"./components/views/TodoListView\";\nimport ApiProvider from \"./components/providers/ApiProvider\";\n\nfunction App() {\n  return (\n      <ApiProvider>\n        <TodoListView />\n      </ApiProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}